name: Clean Release Builder

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g. v1.0.0)'
        required: true

jobs:
  release:
    name: Prepare Clean Release Branch
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to push new branches and tags

      - name: Parse Version Components
        id: parse
        run: |
          TAG=${{ github.event.inputs.version }}
          echo "version-without-v=${TAG#v}" >> $GITHUB_OUTPUT
          echo "branch-name=release-${TAG#v}" >> $GITHUB_OUTPUT

      - name: Create Clean Branch
        run: |
          git checkout -b ${{ steps.parse.outputs.branch-name }}

      - name: Replace Tokens in Manifest
        uses: cschleiden/replace-tokens@v1
        with:
          files: 'src/module.json'
        env:
          VERSION: ${{ steps.parse.outputs.version-without-v }}
          URL: https://github.com/${{ github.repository }}
          MANIFEST: https://github.com/${{ github.repository }}/releases/latest/download/module.json
          DOWNLOAD: https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.version }}/module.zip

      - name: Move Final Manifest to Root
        run: mv src/module.json module.json

      - name: Clean Dev Files
        run: |
          rm -rf .github .gitignore .vscode src

      - name: Commit Clean Release
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add .
          git commit -m "Clean release ${{ steps.parse.outputs.version-without-v }}"

      - name: Push Clean Branch
        run: git push origin HEAD

      - name: Create Tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Zip Clean Module
        run: zip -r module.zip . -x "*.git*"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: |
            Automated clean release for ${{ github.event.inputs.version }}
          artifacts: module.zip,module.json
          token: ${{ secrets.GITHUB_TOKEN }}
