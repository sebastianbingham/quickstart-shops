name: Clean Release Builder

on:
  workflow_dispatch:

jobs:
  release:
    name: Prepare Clean Release Branch
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      version: ${{ steps.generate_version.outputs.version }}
      tag: ${{ steps.generate_version.outputs.tag }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🕒 Generate Version from UTC Time
        id: generate_version
        run: |
          VERSION=$(date -u "+%y.%m.%d%H%M")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "branch=release-$VERSION" >> $GITHUB_OUTPUT

      - name: 🌿 Create Clean Branch
        run: git checkout -b ${{ steps.generate_version.outputs.branch }}

      - name: 🪄 Replace Tokens in Manifest
        uses: cschleiden/replace-tokens@v1
        with:
          files: 'src/module.json'
        env:
          VERSION: ${{ steps.generate_version.outputs.version }}
          URL: https://github.com/${{ github.repository }}
          MANIFEST: https://github.com/${{ github.repository }}/releases/latest/download/module.json
          DOWNLOAD: https://github.com/${{ github.repository }}/releases/download/${{ steps.generate_version.outputs.tag }}/module.zip

      - name: 🚚 Move Final Manifest to Root
        run: mv src/module.json module.json

      - name: 🧹 Clean Dev Files
        run: |
          rm -rf .github .gitignore .gitattributes foundry-cli-scripts src package.json package-lock.json

      - name: ✅ Commit Clean Release
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add .
          git commit -m "Clean release ${{ steps.generate_version.outputs.version }}"

      - name: 🚀 Push Clean Branch
        run: git push origin HEAD

      - name: 🏷 Create Tag
        run: |
          git tag ${{ steps.generate_version.outputs.tag }}
          git push origin ${{ steps.generate_version.outputs.tag }}

      - name: 📦 Zip Clean Module
        run: zip -r module.zip . -x "*.git*"

      - name: 📤 Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: ${{ steps.generate_version.outputs.tag }}
          name: Release ${{ steps.generate_version.outputs.version }}
          body: |
            Automated clean release for ${{ steps.generate_version.outputs.version }}
          artifacts: module.zip,module.json
          token: ${{ secrets.GITHUB_TOKEN }}

  update-issue-forms:
    name: Update Issue Forms on Main
    needs: release
    uses: ./.github/workflows/update-issue-forms.yml
    with:
      version: v${{ needs.release.outputs.version }}
